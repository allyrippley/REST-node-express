{"version":3,"sources":["app.js","controllers/bookController.js","routes/bookRoutes.js","models/bookModel.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["var express = require('express');\nvar mongoose = require('mongoose');\nvar bodyParser = require('body-parser');\nvar db = mongoose.connect('mongodb://aripp:liberty@ds041613.mongolab.com:41613/books');\n\nvar Book = require('./models/bookModel');\nvar app = express();\nvar port = process.env.PORT || 3000;\n\n\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(bodyParser.json());\nvar bookRouter = require('./routes/bookRoutes');\n\n  app.use('/api', bookRouter(Book));\n\napp.get(\"/\", function(req,res){\n  res.send('welcome to my API!');\n});\n\napp.listen(port, function(){\n  console.log(\"Running on port:\" + port);\n});\n","const bookController = function(Book) {\r\n\r\n  const post = function(req,res){\r\n    const book = new Book(req.body);\r\n    book.save();\r\n    res.status(201).send(book);\r\n\r\n  }\r\n  const get = function(req,res){\r\n    const query = req.query;\r\n    Book.find(query, function(error, books){\r\n      if(error){\r\n        res.status(500).send(error);\r\n      } else {\r\n        res.json(books);\r\n      }\r\n    });\r\n    }\r\n\r\n    return {\r\n      post: post,\r\n      get: get\r\n    }\r\n}\r\n\r\nmodule.exports = bookController;\r\n","const express = require('express');\r\n\r\nconst routes = function(Book) {\r\n\r\n  const bookRouter = express.Router();\r\n\r\n  bookRouter.use('/Books/:bookId', function(req,res,next){\r\n    Book.findById(req.params.bookId, function(error,book){\r\n      if(error){\r\n        res.status(500).send(error);\r\n      } else if(book) {\r\n        req.book = book;\r\n        next();\r\n      } else {\r\n        res.status(404).send('no book found');\r\n      }\r\n    });\r\n  });\r\n  bookRouter.route('/Books')\r\n    .post(function(req,res){\r\n      const book = new Book(req.body);\r\n      book.save();\r\n      res.status(201).send(book);\r\n\r\n    })\r\n    .get(function(req,res){\r\n      const query = req.query;\r\n      Book.find(query, function(error, books){\r\n        if(error){\r\n          res.status(500).send(error);\r\n        } else {\r\n          res.json(books);\r\n        }\r\n      });\r\n      });\r\n\r\n  bookRouter.route('/Books/:bookId')\r\n    .get(function(req, res){\r\n      res.json(req.book);\r\n    })\r\n    .put(function(req,res){\r\n      req.book.title = req.body.title;\r\n      req.book.author = req.body.author;\r\n      req.book.genre = req.body.genre;\r\n      req.book.read = req.body.read;\r\n      req.book.save(function(err){\r\n        if(err) {\r\n          res.status(500).send(err);\r\n        } else {\r\n          res.json(req.book);\r\n        }\r\n      });\r\n      res.json(req.book);\r\n    })\r\n    .patch(function(req,res){\r\n      if(req.body._id) {\r\n        delete req.body._id;\r\n      }\r\n      for(var p in req.body) {\r\n        req.book[p] = req.body[p];\r\n      }\r\n      req.book.save(function(err){\r\n        if(err) {\r\n          res.status(500).send(err);\r\n        } else {\r\n          res.json(req.book);\r\n        }\r\n      });\r\n  });\r\n\r\nreturn bookRouter;\r\n\r\n\r\n}\r\n\r\nmodule.exports = routes;\r\n","const mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst bookModel = new Schema({\r\n  title: {\r\n    type: String\r\n  },\r\n  author: { type: String },\r\n  genre: { type: String },\r\n  read: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n});\r\n\r\nmodule.exports = mongoose.model('Book', bookModel);\r\n"],"sourceRoot":"/source/"}